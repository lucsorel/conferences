[tool.poetry]
name = "expylliarmus"
version = "0.1.0"
description = ""
authors = ["Luc Sorel-Giffo"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
matplotlib = "3.7.1"

[tool.poetry.group.lint.dependencies]
pre-commit = "3.3.3"

[tool.isort]
# en cohérence avec les autres outils de formatage ou analyse de code
line_length = 120
# Mode 5 de groupage des imports : compatible avec yapf
# from third_party import (
#     lib1, lib2, lib3, lib4,
#     lib5, etc.
# )
multi_line_output = 5
balanced_wrapping = false
# TESTING->known_testing : crée une section spécifique d'imports concernant le contenu des dossiers de test
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER", "TESTING"]
known_testing = ["tests"]

[tool.yapf]
based_on_style = "facebook"
# voir la section https://github.com/google/yapf#knobs
COALESCE_BRACKETS = false
# en cohérence avec les autres outils de formatage ou analyse de code
COLUMN_LIMIT = 120
DEDENT_CLOSING_BRACKETS = true
INDENT_DICTIONARY_VALUE = false
EACH_DICT_ENTRY_ON_SEPARATE_LINE = true
FORCE_MULTILINE_DICT = true
JOIN_MULTIPLE_LINES = false
SPACES_AROUND_DEFAULT_OR_NAMED_ASSIGN = false
SPLIT_BEFORE_CLOSING_BRACKET = true
SPLIT_BEFORE_DICT_SET_GENERATOR = true
SPLIT_COMPLEX_COMPREHENSION = true
SPLIT_BEFORE_EXPRESSION_AFTER_OPENING_PAREN = true
SPLIT_BEFORE_FIRST_ARGUMENT = true

[tool.ruff]
# en cohérence avec les autres outils de formatage ou analyse de code
line-length = 120
# familles de vérifications activées (https://beta.ruff.rs/docs/rules/)
select = ["A", "B", "E", "F", "W", "N", "SIM", "C4"]
# ne pas vérifier la longueur des lignes, isort et yapf le font déjà
extend-ignore = ["E501"]

# mettre ce hook en 1er si on veut activer l'autofix
# (pour que le formatage de code passe après)
fix = false

[tool.ruff.per-file-ignores]
# autoriser les imports inutilisés dans les fichiers __init__.py (ils exposent des fonctionnalités du package)
"__init__.py" = ["E402"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
